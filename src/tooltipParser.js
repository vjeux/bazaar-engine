// @generated by Peggy 4.2.0.
//
// https://peggyjs.org/

// Import lodash
const _ = require("lodash");
//import _ from "lodash";

// Helper functions used within the grammar
function extractNumbers(input) {
  let content = input;

  // If input contains parentheses, extract the content within them
  const match = input.match(/\(\s*([^)]*?)\s*\)/);
  if (match && match[1]) {
    content = match[1];
  }

  // Split the content by either '»' or '/' and process each item
  return content
    .split(/[»/]/)
    .map((item) => {
      // Remove whitespace and an optional leading '+'
      const s = item.trim().replace(/^\+/, "");

      // Check for multiplier values ending with 'x'
      const multiplierMatch = s.match(/^(\d+(?:\.\d+)?)x$/i);
      if (multiplierMatch) {
        return parseFloat(multiplierMatch[1]);
      }

      // Check for percentage values ending with '%'
      const percentageMatch = s.match(/^(\d+(?:\.\d+)?)%$/);
      if (percentageMatch) {
        return parseFloat(percentageMatch[1]);
      }

      // Check for plain numbers
      const numberMatch = s.match(/^(\d+(?:\.\d+)?)$/);
      if (numberMatch) {
        return parseFloat(numberMatch[1]);
      }

      // If none of the expected patterns match, return NaN
      return NaN;
    })
    .filter((num) => !isNaN(num));
}

const TierInt = {
  Bronze: 0,
  Silver: 1,
  Gold: 2,
  Diamond: 3,
  Legendary: 4
};

function cfTier(item, values, construct_function) {
  const startingIndex = TierInt[item.startingTier];
  let tiers = Object.keys(TierInt);
  // Filter out all tiers where the item doesn't have a tooltip
  tiers = tiers
    .slice(startingIndex)
    .filter((tier) => item.tiers[tier].tooltips.length > 0);

  let result = {};

  tiers.forEach((tier, index) => {
    result = _.merge(result, construct_function(item, tier, values, index));
  });

  return result;
}

function constructTierInfos(item, attribute_type, values) {
  const startingIndex = TierInt[item.startingTier];
  let tiers = Object.keys(TierInt);
  // Filter out all tiers where the item doesn't have a tooltip
  tiers = tiers
    .slice(startingIndex)
    .filter((tier) => item.tiers[tier].tooltips.length > 0);

  // For every tier, create a TierInfo object
  const tierInfos = {};
  tiers.forEach((tier, index) => {
    tierInfos[tier] = {
      Attributes: {
        [attribute_type]: values[index]
      }
    };
  });

  // Return partial card object
  return {
    Tiers: tierInfos
  };
}

function peg$subclass(child, parent) {
  function C() {
    this.constructor = child;
  }
  C.prototype = parent.prototype;
  child.prototype = new C();
}

function peg$SyntaxError(message, expected, found, location) {
  var self = Error.call(this, message);
  // istanbul ignore next Check is a necessary evil to support older environments
  if (Object.setPrototypeOf) {
    Object.setPrototypeOf(self, peg$SyntaxError.prototype);
  }
  self.expected = expected;
  self.found = found;
  self.location = location;
  self.name = "SyntaxError";
  return self;
}

peg$subclass(peg$SyntaxError, Error);

function peg$padEnd(str, targetLength, padString) {
  padString = padString || " ";
  if (str.length > targetLength) {
    return str;
  }
  targetLength -= str.length;
  padString += padString.repeat(targetLength);
  return str + padString.slice(0, targetLength);
}

peg$SyntaxError.prototype.format = function (sources) {
  var str = "Error: " + this.message;
  if (this.location) {
    var src = null;
    var k;
    for (k = 0; k < sources.length; k++) {
      if (sources[k].source === this.location.source) {
        src = sources[k].text.split(/\r\n|\n|\r/g);
        break;
      }
    }
    var s = this.location.start;
    var offset_s =
      this.location.source && typeof this.location.source.offset === "function"
        ? this.location.source.offset(s)
        : s;
    var loc =
      this.location.source + ":" + offset_s.line + ":" + offset_s.column;
    if (src) {
      var e = this.location.end;
      var filler = peg$padEnd("", offset_s.line.toString().length, " ");
      var line = src[s.line - 1];
      var last = s.line === e.line ? e.column : line.length + 1;
      var hatLen = last - s.column || 1;
      str +=
        "\n --> " +
        loc +
        "\n" +
        filler +
        " |\n" +
        offset_s.line +
        " | " +
        line +
        "\n" +
        filler +
        " | " +
        peg$padEnd("", s.column - 1, " ") +
        peg$padEnd("", hatLen, "^");
    } else {
      str += "\n at " + loc;
    }
  }
  return str;
};

peg$SyntaxError.buildMessage = function (expected, found) {
  var DESCRIBE_EXPECTATION_FNS = {
    literal: function (expectation) {
      return '"' + literalEscape(expectation.text) + '"';
    },

    class: function (expectation) {
      var escapedParts = expectation.parts.map(function (part) {
        return Array.isArray(part)
          ? classEscape(part[0]) + "-" + classEscape(part[1])
          : classEscape(part);
      });

      return (
        "[" + (expectation.inverted ? "^" : "") + escapedParts.join("") + "]"
      );
    },

    any: function () {
      return "any character";
    },

    end: function () {
      return "end of input";
    },

    other: function (expectation) {
      return expectation.description;
    }
  };

  function hex(ch) {
    return ch.charCodeAt(0).toString(16).toUpperCase();
  }

  function literalEscape(s) {
    return s
      .replace(/\\/g, "\\\\")
      .replace(/"/g, '\\"')
      .replace(/\0/g, "\\0")
      .replace(/\t/g, "\\t")
      .replace(/\n/g, "\\n")
      .replace(/\r/g, "\\r")
      .replace(/[\x00-\x0F]/g, function (ch) {
        return "\\x0" + hex(ch);
      })
      .replace(/[\x10-\x1F\x7F-\x9F]/g, function (ch) {
        return "\\x" + hex(ch);
      });
  }

  function classEscape(s) {
    return s
      .replace(/\\/g, "\\\\")
      .replace(/\]/g, "\\]")
      .replace(/\^/g, "\\^")
      .replace(/-/g, "\\-")
      .replace(/\0/g, "\\0")
      .replace(/\t/g, "\\t")
      .replace(/\n/g, "\\n")
      .replace(/\r/g, "\\r")
      .replace(/[\x00-\x0F]/g, function (ch) {
        return "\\x0" + hex(ch);
      })
      .replace(/[\x10-\x1F\x7F-\x9F]/g, function (ch) {
        return "\\x" + hex(ch);
      });
  }

  function describeExpectation(expectation) {
    return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);
  }

  function describeExpected(expected) {
    var descriptions = expected.map(describeExpectation);
    var i, j;

    descriptions.sort();

    if (descriptions.length > 0) {
      for (i = 1, j = 1; i < descriptions.length; i++) {
        if (descriptions[i - 1] !== descriptions[i]) {
          descriptions[j] = descriptions[i];
          j++;
        }
      }
      descriptions.length = j;
    }

    switch (descriptions.length) {
      case 1:
        return descriptions[0];

      case 2:
        return descriptions[0] + " or " + descriptions[1];

      default:
        return (
          descriptions.slice(0, -1).join(", ") +
          ", or " +
          descriptions[descriptions.length - 1]
        );
    }
  }

  function describeFound(found) {
    return found ? '"' + literalEscape(found) + '"' : "end of input";
  }

  return (
    "Expected " +
    describeExpected(expected) +
    " but " +
    describeFound(found) +
    " found."
  );
};

function peg$parse(input, options) {
  options = options !== undefined ? options : {};

  var peg$FAILED = {};
  var peg$source = options.grammarSource;

  var peg$startRuleFunctions = { Tooltip: peg$parseTooltip };
  var peg$startRuleFunction = peg$parseTooltip;

  var peg$c0 = "ammo";
  var peg$c1 = "ammomax";
  var peg$c2 = "burn";
  var peg$c3 = "burnapplyamount";
  var peg$c4 = "burnremoveamount";
  var peg$c5 = "buyprice";
  var peg$c6 = "chargeamount";
  var peg$c7 = "cooldownmax";
  var peg$c8 = "counter";
  var peg$c9 = "critchance";
  var peg$c10 = "custom_0";
  var peg$c11 = "custom_1";
  var peg$c12 = "custom_2";
  var peg$c13 = "custom_3";
  var peg$c14 = "custom_4";
  var peg$c15 = "custom_5";
  var peg$c16 = "damageamount";
  var peg$c17 = "damagecrit";
  var peg$c18 = "experience";
  var peg$c19 = "freeze";
  var peg$c20 = "freezeamount";
  var peg$c21 = "freezetargets";
  var peg$c22 = "gold";
  var peg$c23 = "haste";
  var peg$c24 = "hasteamount";
  var peg$c25 = "healamount";
  var peg$c26 = "health";
  var peg$c27 = "healthmax";
  var peg$c28 = "healthregen";
  var peg$c29 = "income";
  var peg$c30 = "joy";
  var peg$c31 = "joyapplyamount";
  var peg$c32 = "level";
  var peg$c33 = "lifesteal";
  var peg$c34 = "multicast";
  var peg$c35 = "percentdamagereduction";
  var peg$c36 = "poison";
  var peg$c37 = "poisonapplyamount";
  var peg$c38 = "poisonremoveamount";
  var peg$c39 = "prestige";
  var peg$c40 = "reloadamount";
  var peg$c41 = "rerollcostmodifier";
  var peg$c42 = "sellprice";
  var peg$c43 = "shield";
  var peg$c44 = "shieldapplyamount";
  var peg$c45 = "shieldremoveamount";
  var peg$c46 = "slow";
  var peg$c47 = "slowamount";
  var peg$c48 = "apparel";
  var peg$c49 = "aquatic";
  var peg$c50 = "core";
  var peg$c51 = "damage";
  var peg$c52 = "dinosaur";
  var peg$c53 = "dragon";
  var peg$c54 = "food";
  var peg$c55 = "friend";
  var peg$c56 = "heal";
  var peg$c57 = "loot";
  var peg$c58 = "merchant";
  var peg$c59 = "potion";
  var peg$c60 = "property";
  var peg$c61 = "ray";
  var peg$c62 = "tech";
  var peg$c63 = "tool";
  var peg$c64 = "toy";
  var peg$c65 = "unsellable";
  var peg$c66 = "vehicle";
  var peg$c67 = "weapon";
  var peg$c68 = "cooldown";
  var peg$c69 = "deal";
  var peg$c70 = "(";
  var peg$c71 = ")";

  var peg$r0 = /^[^)]/;
  var peg$r1 = /^[+\-]/;
  var peg$r2 = /^[0-9]/;
  var peg$r3 = /^[x%]/;
  var peg$r4 = /^[ \t\n\r]/;

  var peg$e0 = peg$literalExpectation("Ammo", true);
  var peg$e1 = peg$literalExpectation("AmmoMax", true);
  var peg$e2 = peg$literalExpectation("Burn", true);
  var peg$e3 = peg$literalExpectation("BurnApplyAmount", true);
  var peg$e4 = peg$literalExpectation("BurnRemoveAmount", true);
  var peg$e5 = peg$literalExpectation("BuyPrice", true);
  var peg$e6 = peg$literalExpectation("ChargeAmount", true);
  var peg$e7 = peg$literalExpectation("CooldownMax", true);
  var peg$e8 = peg$literalExpectation("Counter", true);
  var peg$e9 = peg$literalExpectation("CritChance", true);
  var peg$e10 = peg$literalExpectation("Custom_0", true);
  var peg$e11 = peg$literalExpectation("Custom_1", true);
  var peg$e12 = peg$literalExpectation("Custom_2", true);
  var peg$e13 = peg$literalExpectation("Custom_3", true);
  var peg$e14 = peg$literalExpectation("Custom_4", true);
  var peg$e15 = peg$literalExpectation("Custom_5", true);
  var peg$e16 = peg$literalExpectation("DamageAmount", true);
  var peg$e17 = peg$literalExpectation("DamageCrit", true);
  var peg$e18 = peg$literalExpectation("Experience", true);
  var peg$e19 = peg$literalExpectation("Freeze", true);
  var peg$e20 = peg$literalExpectation("FreezeAmount", true);
  var peg$e21 = peg$literalExpectation("FreezeTargets", true);
  var peg$e22 = peg$literalExpectation("Gold", true);
  var peg$e23 = peg$literalExpectation("Haste", true);
  var peg$e24 = peg$literalExpectation("HasteAmount", true);
  var peg$e25 = peg$literalExpectation("HealAmount", true);
  var peg$e26 = peg$literalExpectation("Health", true);
  var peg$e27 = peg$literalExpectation("HealthMax", true);
  var peg$e28 = peg$literalExpectation("HealthRegen", true);
  var peg$e29 = peg$literalExpectation("Income", true);
  var peg$e30 = peg$literalExpectation("Joy", true);
  var peg$e31 = peg$literalExpectation("JoyApplyAmount", true);
  var peg$e32 = peg$literalExpectation("Level", true);
  var peg$e33 = peg$literalExpectation("Lifesteal", true);
  var peg$e34 = peg$literalExpectation("Multicast", true);
  var peg$e35 = peg$literalExpectation("PercentDamageReduction", true);
  var peg$e36 = peg$literalExpectation("Poison", true);
  var peg$e37 = peg$literalExpectation("PoisonApplyAmount", true);
  var peg$e38 = peg$literalExpectation("PoisonRemoveAmount", true);
  var peg$e39 = peg$literalExpectation("Prestige", true);
  var peg$e40 = peg$literalExpectation("ReloadAmount", true);
  var peg$e41 = peg$literalExpectation("RerollCostModifier", true);
  var peg$e42 = peg$literalExpectation("SellPrice", true);
  var peg$e43 = peg$literalExpectation("Shield", true);
  var peg$e44 = peg$literalExpectation("ShieldApplyAmount", true);
  var peg$e45 = peg$literalExpectation("ShieldRemoveAmount", true);
  var peg$e46 = peg$literalExpectation("Slow", true);
  var peg$e47 = peg$literalExpectation("SlowAmount", true);
  var peg$e48 = peg$literalExpectation("Apparel", true);
  var peg$e49 = peg$literalExpectation("Aquatic", true);
  var peg$e50 = peg$literalExpectation("Core", true);
  var peg$e51 = peg$literalExpectation("Damage", true);
  var peg$e52 = peg$literalExpectation("Dinosaur", true);
  var peg$e53 = peg$literalExpectation("Dragon", true);
  var peg$e54 = peg$literalExpectation("Food", true);
  var peg$e55 = peg$literalExpectation("Friend", true);
  var peg$e56 = peg$literalExpectation("Heal", true);
  var peg$e57 = peg$literalExpectation("Loot", true);
  var peg$e58 = peg$literalExpectation("Merchant", true);
  var peg$e59 = peg$literalExpectation("Potion", true);
  var peg$e60 = peg$literalExpectation("Property", true);
  var peg$e61 = peg$literalExpectation("Ray", true);
  var peg$e62 = peg$literalExpectation("Tech", true);
  var peg$e63 = peg$literalExpectation("Tool", true);
  var peg$e64 = peg$literalExpectation("Toy", true);
  var peg$e65 = peg$literalExpectation("Unsellable", true);
  var peg$e66 = peg$literalExpectation("Vehicle", true);
  var peg$e67 = peg$literalExpectation("Weapon", true);
  var peg$e68 = peg$literalExpectation("ammo", true);
  var peg$e69 = peg$literalExpectation("cooldown", true);
  var peg$e70 = peg$anyExpectation();
  var peg$e71 = peg$literalExpectation("burn", true);
  var peg$e72 = peg$literalExpectation("deal", true);
  var peg$e73 = peg$literalExpectation("heal", true);
  var peg$e74 = peg$literalExpectation("poison", true);
  var peg$e75 = peg$literalExpectation("shield", true);
  var peg$e76 = peg$literalExpectation("(", false);
  var peg$e77 = peg$classExpectation([")"], true, false);
  var peg$e78 = peg$literalExpectation(")", false);
  var peg$e79 = peg$classExpectation(["+", "-"], false, false);
  var peg$e80 = peg$classExpectation([["0", "9"]], false, false);
  var peg$e81 = peg$classExpectation(["x", "%"], false, false);
  var peg$e82 = peg$otherExpectation("whitespace");
  var peg$e83 = peg$classExpectation([" ", "\t", "\n", "\r"], false, false);

  var peg$f0 = function (stat, values, remaining) {
    // If cooldown
    if (stat.toLowerCase() === "cooldown") {
      return {
        Tiers: constructTierInfos(ITEM, "CooldownMax", values)
      };
    } else if (stat.toLowerCase() === "ammo") {
      return {
        Tiers: constructTierInfos(ITEM, "AmmoMax", values)
      };
    }
    throw new Error("Unknown stat type: " + stat);
  };
  var peg$f1 = function (action, amount, remaining) {
    return {
      type: "NormalActionTooltip",
      action: action.toLowerCase(),
      amount: amount,
      remaining: remaining || ""
    };
  };
  var peg$f2 = function (action, amount) {
    return {
      action: action.toLowerCase(),
      amount: amount
    };
  };
  var peg$f3 = function (stat, values) {
    return {
      stat: stat.toLowerCase(),
      values: values
    };
  };
  var peg$f4 = function (values) {
    return extractNumbers("(" + values + ")");
  };
  var peg$f5 = function (value) {
    return extractNumbers(value);
  };
  var peg$currPos = options.peg$currPos | 0;
  var peg$savedPos = peg$currPos;
  var peg$posDetailsCache = [{ line: 1, column: 1 }];
  var peg$maxFailPos = peg$currPos;
  var peg$maxFailExpected = options.peg$maxFailExpected || [];
  var peg$silentFails = options.peg$silentFails | 0;

  var peg$result;

  if (options.startRule) {
    if (!(options.startRule in peg$startRuleFunctions)) {
      throw new Error(
        "Can't start parsing from rule \"" + options.startRule + '".'
      );
    }

    peg$startRuleFunction = peg$startRuleFunctions[options.startRule];
  }

  function text() {
    return input.substring(peg$savedPos, peg$currPos);
  }

  function offset() {
    return peg$savedPos;
  }

  function range() {
    return {
      source: peg$source,
      start: peg$savedPos,
      end: peg$currPos
    };
  }

  function location() {
    return peg$computeLocation(peg$savedPos, peg$currPos);
  }

  function expected(description, location) {
    location =
      location !== undefined
        ? location
        : peg$computeLocation(peg$savedPos, peg$currPos);

    throw peg$buildStructuredError(
      [peg$otherExpectation(description)],
      input.substring(peg$savedPos, peg$currPos),
      location
    );
  }

  function error(message, location) {
    location =
      location !== undefined
        ? location
        : peg$computeLocation(peg$savedPos, peg$currPos);

    throw peg$buildSimpleError(message, location);
  }

  function peg$literalExpectation(text, ignoreCase) {
    return { type: "literal", text: text, ignoreCase: ignoreCase };
  }

  function peg$classExpectation(parts, inverted, ignoreCase) {
    return {
      type: "class",
      parts: parts,
      inverted: inverted,
      ignoreCase: ignoreCase
    };
  }

  function peg$anyExpectation() {
    return { type: "any" };
  }

  function peg$endExpectation() {
    return { type: "end" };
  }

  function peg$otherExpectation(description) {
    return { type: "other", description: description };
  }

  function peg$computePosDetails(pos) {
    var details = peg$posDetailsCache[pos];
    var p;

    if (details) {
      return details;
    } else {
      if (pos >= peg$posDetailsCache.length) {
        p = peg$posDetailsCache.length - 1;
      } else {
        p = pos;
        while (!peg$posDetailsCache[--p]) {}
      }

      details = peg$posDetailsCache[p];
      details = {
        line: details.line,
        column: details.column
      };

      while (p < pos) {
        if (input.charCodeAt(p) === 10) {
          details.line++;
          details.column = 1;
        } else {
          details.column++;
        }

        p++;
      }

      peg$posDetailsCache[pos] = details;

      return details;
    }
  }

  function peg$computeLocation(startPos, endPos, offset) {
    var startPosDetails = peg$computePosDetails(startPos);
    var endPosDetails = peg$computePosDetails(endPos);

    var res = {
      source: peg$source,
      start: {
        offset: startPos,
        line: startPosDetails.line,
        column: startPosDetails.column
      },
      end: {
        offset: endPos,
        line: endPosDetails.line,
        column: endPosDetails.column
      }
    };
    if (offset && peg$source && typeof peg$source.offset === "function") {
      res.start = peg$source.offset(res.start);
      res.end = peg$source.offset(res.end);
    }
    return res;
  }

  function peg$fail(expected) {
    if (peg$currPos < peg$maxFailPos) {
      return;
    }

    if (peg$currPos > peg$maxFailPos) {
      peg$maxFailPos = peg$currPos;
      peg$maxFailExpected = [];
    }

    peg$maxFailExpected.push(expected);
  }

  function peg$buildSimpleError(message, location) {
    return new peg$SyntaxError(message, null, null, location);
  }

  function peg$buildStructuredError(expected, found, location) {
    return new peg$SyntaxError(
      peg$SyntaxError.buildMessage(expected, found),
      expected,
      found,
      location
    );
  }

  function peg$parseTooltip() {
    var s0;

    s0 = peg$parseStatTooltip();
    if (s0 === peg$FAILED) {
      s0 = peg$parseNormalActionTooltip();
    }

    return s0;
  }

  function peg$parseAttributeType() {
    var s0;

    s0 = input.substr(peg$currPos, 4);
    if (s0.toLowerCase() === peg$c0) {
      peg$currPos += 4;
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) {
        peg$fail(peg$e0);
      }
    }
    if (s0 === peg$FAILED) {
      s0 = input.substr(peg$currPos, 7);
      if (s0.toLowerCase() === peg$c1) {
        peg$currPos += 7;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) {
          peg$fail(peg$e1);
        }
      }
      if (s0 === peg$FAILED) {
        s0 = input.substr(peg$currPos, 4);
        if (s0.toLowerCase() === peg$c2) {
          peg$currPos += 4;
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) {
            peg$fail(peg$e2);
          }
        }
        if (s0 === peg$FAILED) {
          s0 = input.substr(peg$currPos, 15);
          if (s0.toLowerCase() === peg$c3) {
            peg$currPos += 15;
          } else {
            s0 = peg$FAILED;
            if (peg$silentFails === 0) {
              peg$fail(peg$e3);
            }
          }
          if (s0 === peg$FAILED) {
            s0 = input.substr(peg$currPos, 16);
            if (s0.toLowerCase() === peg$c4) {
              peg$currPos += 16;
            } else {
              s0 = peg$FAILED;
              if (peg$silentFails === 0) {
                peg$fail(peg$e4);
              }
            }
            if (s0 === peg$FAILED) {
              s0 = input.substr(peg$currPos, 8);
              if (s0.toLowerCase() === peg$c5) {
                peg$currPos += 8;
              } else {
                s0 = peg$FAILED;
                if (peg$silentFails === 0) {
                  peg$fail(peg$e5);
                }
              }
              if (s0 === peg$FAILED) {
                s0 = input.substr(peg$currPos, 12);
                if (s0.toLowerCase() === peg$c6) {
                  peg$currPos += 12;
                } else {
                  s0 = peg$FAILED;
                  if (peg$silentFails === 0) {
                    peg$fail(peg$e6);
                  }
                }
                if (s0 === peg$FAILED) {
                  s0 = input.substr(peg$currPos, 11);
                  if (s0.toLowerCase() === peg$c7) {
                    peg$currPos += 11;
                  } else {
                    s0 = peg$FAILED;
                    if (peg$silentFails === 0) {
                      peg$fail(peg$e7);
                    }
                  }
                  if (s0 === peg$FAILED) {
                    s0 = input.substr(peg$currPos, 7);
                    if (s0.toLowerCase() === peg$c8) {
                      peg$currPos += 7;
                    } else {
                      s0 = peg$FAILED;
                      if (peg$silentFails === 0) {
                        peg$fail(peg$e8);
                      }
                    }
                    if (s0 === peg$FAILED) {
                      s0 = input.substr(peg$currPos, 10);
                      if (s0.toLowerCase() === peg$c9) {
                        peg$currPos += 10;
                      } else {
                        s0 = peg$FAILED;
                        if (peg$silentFails === 0) {
                          peg$fail(peg$e9);
                        }
                      }
                      if (s0 === peg$FAILED) {
                        s0 = input.substr(peg$currPos, 8);
                        if (s0.toLowerCase() === peg$c10) {
                          peg$currPos += 8;
                        } else {
                          s0 = peg$FAILED;
                          if (peg$silentFails === 0) {
                            peg$fail(peg$e10);
                          }
                        }
                        if (s0 === peg$FAILED) {
                          s0 = input.substr(peg$currPos, 8);
                          if (s0.toLowerCase() === peg$c11) {
                            peg$currPos += 8;
                          } else {
                            s0 = peg$FAILED;
                            if (peg$silentFails === 0) {
                              peg$fail(peg$e11);
                            }
                          }
                          if (s0 === peg$FAILED) {
                            s0 = input.substr(peg$currPos, 8);
                            if (s0.toLowerCase() === peg$c12) {
                              peg$currPos += 8;
                            } else {
                              s0 = peg$FAILED;
                              if (peg$silentFails === 0) {
                                peg$fail(peg$e12);
                              }
                            }
                            if (s0 === peg$FAILED) {
                              s0 = input.substr(peg$currPos, 8);
                              if (s0.toLowerCase() === peg$c13) {
                                peg$currPos += 8;
                              } else {
                                s0 = peg$FAILED;
                                if (peg$silentFails === 0) {
                                  peg$fail(peg$e13);
                                }
                              }
                              if (s0 === peg$FAILED) {
                                s0 = input.substr(peg$currPos, 8);
                                if (s0.toLowerCase() === peg$c14) {
                                  peg$currPos += 8;
                                } else {
                                  s0 = peg$FAILED;
                                  if (peg$silentFails === 0) {
                                    peg$fail(peg$e14);
                                  }
                                }
                                if (s0 === peg$FAILED) {
                                  s0 = input.substr(peg$currPos, 8);
                                  if (s0.toLowerCase() === peg$c15) {
                                    peg$currPos += 8;
                                  } else {
                                    s0 = peg$FAILED;
                                    if (peg$silentFails === 0) {
                                      peg$fail(peg$e15);
                                    }
                                  }
                                  if (s0 === peg$FAILED) {
                                    s0 = input.substr(peg$currPos, 12);
                                    if (s0.toLowerCase() === peg$c16) {
                                      peg$currPos += 12;
                                    } else {
                                      s0 = peg$FAILED;
                                      if (peg$silentFails === 0) {
                                        peg$fail(peg$e16);
                                      }
                                    }
                                    if (s0 === peg$FAILED) {
                                      s0 = input.substr(peg$currPos, 10);
                                      if (s0.toLowerCase() === peg$c17) {
                                        peg$currPos += 10;
                                      } else {
                                        s0 = peg$FAILED;
                                        if (peg$silentFails === 0) {
                                          peg$fail(peg$e17);
                                        }
                                      }
                                      if (s0 === peg$FAILED) {
                                        s0 = input.substr(peg$currPos, 10);
                                        if (s0.toLowerCase() === peg$c18) {
                                          peg$currPos += 10;
                                        } else {
                                          s0 = peg$FAILED;
                                          if (peg$silentFails === 0) {
                                            peg$fail(peg$e18);
                                          }
                                        }
                                        if (s0 === peg$FAILED) {
                                          s0 = input.substr(peg$currPos, 6);
                                          if (s0.toLowerCase() === peg$c19) {
                                            peg$currPos += 6;
                                          } else {
                                            s0 = peg$FAILED;
                                            if (peg$silentFails === 0) {
                                              peg$fail(peg$e19);
                                            }
                                          }
                                          if (s0 === peg$FAILED) {
                                            s0 = input.substr(peg$currPos, 12);
                                            if (s0.toLowerCase() === peg$c20) {
                                              peg$currPos += 12;
                                            } else {
                                              s0 = peg$FAILED;
                                              if (peg$silentFails === 0) {
                                                peg$fail(peg$e20);
                                              }
                                            }
                                            if (s0 === peg$FAILED) {
                                              s0 = input.substr(
                                                peg$currPos,
                                                13
                                              );
                                              if (
                                                s0.toLowerCase() === peg$c21
                                              ) {
                                                peg$currPos += 13;
                                              } else {
                                                s0 = peg$FAILED;
                                                if (peg$silentFails === 0) {
                                                  peg$fail(peg$e21);
                                                }
                                              }
                                              if (s0 === peg$FAILED) {
                                                s0 = input.substr(
                                                  peg$currPos,
                                                  4
                                                );
                                                if (
                                                  s0.toLowerCase() === peg$c22
                                                ) {
                                                  peg$currPos += 4;
                                                } else {
                                                  s0 = peg$FAILED;
                                                  if (peg$silentFails === 0) {
                                                    peg$fail(peg$e22);
                                                  }
                                                }
                                                if (s0 === peg$FAILED) {
                                                  s0 = input.substr(
                                                    peg$currPos,
                                                    5
                                                  );
                                                  if (
                                                    s0.toLowerCase() === peg$c23
                                                  ) {
                                                    peg$currPos += 5;
                                                  } else {
                                                    s0 = peg$FAILED;
                                                    if (peg$silentFails === 0) {
                                                      peg$fail(peg$e23);
                                                    }
                                                  }
                                                  if (s0 === peg$FAILED) {
                                                    s0 = input.substr(
                                                      peg$currPos,
                                                      11
                                                    );
                                                    if (
                                                      s0.toLowerCase() ===
                                                      peg$c24
                                                    ) {
                                                      peg$currPos += 11;
                                                    } else {
                                                      s0 = peg$FAILED;
                                                      if (
                                                        peg$silentFails === 0
                                                      ) {
                                                        peg$fail(peg$e24);
                                                      }
                                                    }
                                                    if (s0 === peg$FAILED) {
                                                      s0 = input.substr(
                                                        peg$currPos,
                                                        10
                                                      );
                                                      if (
                                                        s0.toLowerCase() ===
                                                        peg$c25
                                                      ) {
                                                        peg$currPos += 10;
                                                      } else {
                                                        s0 = peg$FAILED;
                                                        if (
                                                          peg$silentFails === 0
                                                        ) {
                                                          peg$fail(peg$e25);
                                                        }
                                                      }
                                                      if (s0 === peg$FAILED) {
                                                        s0 = input.substr(
                                                          peg$currPos,
                                                          6
                                                        );
                                                        if (
                                                          s0.toLowerCase() ===
                                                          peg$c26
                                                        ) {
                                                          peg$currPos += 6;
                                                        } else {
                                                          s0 = peg$FAILED;
                                                          if (
                                                            peg$silentFails ===
                                                            0
                                                          ) {
                                                            peg$fail(peg$e26);
                                                          }
                                                        }
                                                        if (s0 === peg$FAILED) {
                                                          s0 = input.substr(
                                                            peg$currPos,
                                                            9
                                                          );
                                                          if (
                                                            s0.toLowerCase() ===
                                                            peg$c27
                                                          ) {
                                                            peg$currPos += 9;
                                                          } else {
                                                            s0 = peg$FAILED;
                                                            if (
                                                              peg$silentFails ===
                                                              0
                                                            ) {
                                                              peg$fail(peg$e27);
                                                            }
                                                          }
                                                          if (
                                                            s0 === peg$FAILED
                                                          ) {
                                                            s0 = input.substr(
                                                              peg$currPos,
                                                              11
                                                            );
                                                            if (
                                                              s0.toLowerCase() ===
                                                              peg$c28
                                                            ) {
                                                              peg$currPos += 11;
                                                            } else {
                                                              s0 = peg$FAILED;
                                                              if (
                                                                peg$silentFails ===
                                                                0
                                                              ) {
                                                                peg$fail(
                                                                  peg$e28
                                                                );
                                                              }
                                                            }
                                                            if (
                                                              s0 === peg$FAILED
                                                            ) {
                                                              s0 = input.substr(
                                                                peg$currPos,
                                                                6
                                                              );
                                                              if (
                                                                s0.toLowerCase() ===
                                                                peg$c29
                                                              ) {
                                                                peg$currPos += 6;
                                                              } else {
                                                                s0 = peg$FAILED;
                                                                if (
                                                                  peg$silentFails ===
                                                                  0
                                                                ) {
                                                                  peg$fail(
                                                                    peg$e29
                                                                  );
                                                                }
                                                              }
                                                              if (
                                                                s0 ===
                                                                peg$FAILED
                                                              ) {
                                                                s0 =
                                                                  input.substr(
                                                                    peg$currPos,
                                                                    3
                                                                  );
                                                                if (
                                                                  s0.toLowerCase() ===
                                                                  peg$c30
                                                                ) {
                                                                  peg$currPos += 3;
                                                                } else {
                                                                  s0 =
                                                                    peg$FAILED;
                                                                  if (
                                                                    peg$silentFails ===
                                                                    0
                                                                  ) {
                                                                    peg$fail(
                                                                      peg$e30
                                                                    );
                                                                  }
                                                                }
                                                                if (
                                                                  s0 ===
                                                                  peg$FAILED
                                                                ) {
                                                                  s0 =
                                                                    input.substr(
                                                                      peg$currPos,
                                                                      14
                                                                    );
                                                                  if (
                                                                    s0.toLowerCase() ===
                                                                    peg$c31
                                                                  ) {
                                                                    peg$currPos += 14;
                                                                  } else {
                                                                    s0 =
                                                                      peg$FAILED;
                                                                    if (
                                                                      peg$silentFails ===
                                                                      0
                                                                    ) {
                                                                      peg$fail(
                                                                        peg$e31
                                                                      );
                                                                    }
                                                                  }
                                                                  if (
                                                                    s0 ===
                                                                    peg$FAILED
                                                                  ) {
                                                                    s0 =
                                                                      input.substr(
                                                                        peg$currPos,
                                                                        5
                                                                      );
                                                                    if (
                                                                      s0.toLowerCase() ===
                                                                      peg$c32
                                                                    ) {
                                                                      peg$currPos += 5;
                                                                    } else {
                                                                      s0 =
                                                                        peg$FAILED;
                                                                      if (
                                                                        peg$silentFails ===
                                                                        0
                                                                      ) {
                                                                        peg$fail(
                                                                          peg$e32
                                                                        );
                                                                      }
                                                                    }
                                                                    if (
                                                                      s0 ===
                                                                      peg$FAILED
                                                                    ) {
                                                                      s0 =
                                                                        input.substr(
                                                                          peg$currPos,
                                                                          9
                                                                        );
                                                                      if (
                                                                        s0.toLowerCase() ===
                                                                        peg$c33
                                                                      ) {
                                                                        peg$currPos += 9;
                                                                      } else {
                                                                        s0 =
                                                                          peg$FAILED;
                                                                        if (
                                                                          peg$silentFails ===
                                                                          0
                                                                        ) {
                                                                          peg$fail(
                                                                            peg$e33
                                                                          );
                                                                        }
                                                                      }
                                                                      if (
                                                                        s0 ===
                                                                        peg$FAILED
                                                                      ) {
                                                                        s0 =
                                                                          input.substr(
                                                                            peg$currPos,
                                                                            9
                                                                          );
                                                                        if (
                                                                          s0.toLowerCase() ===
                                                                          peg$c34
                                                                        ) {
                                                                          peg$currPos += 9;
                                                                        } else {
                                                                          s0 =
                                                                            peg$FAILED;
                                                                          if (
                                                                            peg$silentFails ===
                                                                            0
                                                                          ) {
                                                                            peg$fail(
                                                                              peg$e34
                                                                            );
                                                                          }
                                                                        }
                                                                        if (
                                                                          s0 ===
                                                                          peg$FAILED
                                                                        ) {
                                                                          s0 =
                                                                            input.substr(
                                                                              peg$currPos,
                                                                              22
                                                                            );
                                                                          if (
                                                                            s0.toLowerCase() ===
                                                                            peg$c35
                                                                          ) {
                                                                            peg$currPos += 22;
                                                                          } else {
                                                                            s0 =
                                                                              peg$FAILED;
                                                                            if (
                                                                              peg$silentFails ===
                                                                              0
                                                                            ) {
                                                                              peg$fail(
                                                                                peg$e35
                                                                              );
                                                                            }
                                                                          }
                                                                          if (
                                                                            s0 ===
                                                                            peg$FAILED
                                                                          ) {
                                                                            s0 =
                                                                              input.substr(
                                                                                peg$currPos,
                                                                                6
                                                                              );
                                                                            if (
                                                                              s0.toLowerCase() ===
                                                                              peg$c36
                                                                            ) {
                                                                              peg$currPos += 6;
                                                                            } else {
                                                                              s0 =
                                                                                peg$FAILED;
                                                                              if (
                                                                                peg$silentFails ===
                                                                                0
                                                                              ) {
                                                                                peg$fail(
                                                                                  peg$e36
                                                                                );
                                                                              }
                                                                            }
                                                                            if (
                                                                              s0 ===
                                                                              peg$FAILED
                                                                            ) {
                                                                              s0 =
                                                                                input.substr(
                                                                                  peg$currPos,
                                                                                  17
                                                                                );
                                                                              if (
                                                                                s0.toLowerCase() ===
                                                                                peg$c37
                                                                              ) {
                                                                                peg$currPos += 17;
                                                                              } else {
                                                                                s0 =
                                                                                  peg$FAILED;
                                                                                if (
                                                                                  peg$silentFails ===
                                                                                  0
                                                                                ) {
                                                                                  peg$fail(
                                                                                    peg$e37
                                                                                  );
                                                                                }
                                                                              }
                                                                              if (
                                                                                s0 ===
                                                                                peg$FAILED
                                                                              ) {
                                                                                s0 =
                                                                                  input.substr(
                                                                                    peg$currPos,
                                                                                    18
                                                                                  );
                                                                                if (
                                                                                  s0.toLowerCase() ===
                                                                                  peg$c38
                                                                                ) {
                                                                                  peg$currPos += 18;
                                                                                } else {
                                                                                  s0 =
                                                                                    peg$FAILED;
                                                                                  if (
                                                                                    peg$silentFails ===
                                                                                    0
                                                                                  ) {
                                                                                    peg$fail(
                                                                                      peg$e38
                                                                                    );
                                                                                  }
                                                                                }
                                                                                if (
                                                                                  s0 ===
                                                                                  peg$FAILED
                                                                                ) {
                                                                                  s0 =
                                                                                    input.substr(
                                                                                      peg$currPos,
                                                                                      8
                                                                                    );
                                                                                  if (
                                                                                    s0.toLowerCase() ===
                                                                                    peg$c39
                                                                                  ) {
                                                                                    peg$currPos += 8;
                                                                                  } else {
                                                                                    s0 =
                                                                                      peg$FAILED;
                                                                                    if (
                                                                                      peg$silentFails ===
                                                                                      0
                                                                                    ) {
                                                                                      peg$fail(
                                                                                        peg$e39
                                                                                      );
                                                                                    }
                                                                                  }
                                                                                  if (
                                                                                    s0 ===
                                                                                    peg$FAILED
                                                                                  ) {
                                                                                    s0 =
                                                                                      input.substr(
                                                                                        peg$currPos,
                                                                                        12
                                                                                      );
                                                                                    if (
                                                                                      s0.toLowerCase() ===
                                                                                      peg$c40
                                                                                    ) {
                                                                                      peg$currPos += 12;
                                                                                    } else {
                                                                                      s0 =
                                                                                        peg$FAILED;
                                                                                      if (
                                                                                        peg$silentFails ===
                                                                                        0
                                                                                      ) {
                                                                                        peg$fail(
                                                                                          peg$e40
                                                                                        );
                                                                                      }
                                                                                    }
                                                                                    if (
                                                                                      s0 ===
                                                                                      peg$FAILED
                                                                                    ) {
                                                                                      s0 =
                                                                                        input.substr(
                                                                                          peg$currPos,
                                                                                          18
                                                                                        );
                                                                                      if (
                                                                                        s0.toLowerCase() ===
                                                                                        peg$c41
                                                                                      ) {
                                                                                        peg$currPos += 18;
                                                                                      } else {
                                                                                        s0 =
                                                                                          peg$FAILED;
                                                                                        if (
                                                                                          peg$silentFails ===
                                                                                          0
                                                                                        ) {
                                                                                          peg$fail(
                                                                                            peg$e41
                                                                                          );
                                                                                        }
                                                                                      }
                                                                                      if (
                                                                                        s0 ===
                                                                                        peg$FAILED
                                                                                      ) {
                                                                                        s0 =
                                                                                          input.substr(
                                                                                            peg$currPos,
                                                                                            9
                                                                                          );
                                                                                        if (
                                                                                          s0.toLowerCase() ===
                                                                                          peg$c42
                                                                                        ) {
                                                                                          peg$currPos += 9;
                                                                                        } else {
                                                                                          s0 =
                                                                                            peg$FAILED;
                                                                                          if (
                                                                                            peg$silentFails ===
                                                                                            0
                                                                                          ) {
                                                                                            peg$fail(
                                                                                              peg$e42
                                                                                            );
                                                                                          }
                                                                                        }
                                                                                        if (
                                                                                          s0 ===
                                                                                          peg$FAILED
                                                                                        ) {
                                                                                          s0 =
                                                                                            input.substr(
                                                                                              peg$currPos,
                                                                                              6
                                                                                            );
                                                                                          if (
                                                                                            s0.toLowerCase() ===
                                                                                            peg$c43
                                                                                          ) {
                                                                                            peg$currPos += 6;
                                                                                          } else {
                                                                                            s0 =
                                                                                              peg$FAILED;
                                                                                            if (
                                                                                              peg$silentFails ===
                                                                                              0
                                                                                            ) {
                                                                                              peg$fail(
                                                                                                peg$e43
                                                                                              );
                                                                                            }
                                                                                          }
                                                                                          if (
                                                                                            s0 ===
                                                                                            peg$FAILED
                                                                                          ) {
                                                                                            s0 =
                                                                                              input.substr(
                                                                                                peg$currPos,
                                                                                                17
                                                                                              );
                                                                                            if (
                                                                                              s0.toLowerCase() ===
                                                                                              peg$c44
                                                                                            ) {
                                                                                              peg$currPos += 17;
                                                                                            } else {
                                                                                              s0 =
                                                                                                peg$FAILED;
                                                                                              if (
                                                                                                peg$silentFails ===
                                                                                                0
                                                                                              ) {
                                                                                                peg$fail(
                                                                                                  peg$e44
                                                                                                );
                                                                                              }
                                                                                            }
                                                                                            if (
                                                                                              s0 ===
                                                                                              peg$FAILED
                                                                                            ) {
                                                                                              s0 =
                                                                                                input.substr(
                                                                                                  peg$currPos,
                                                                                                  18
                                                                                                );
                                                                                              if (
                                                                                                s0.toLowerCase() ===
                                                                                                peg$c45
                                                                                              ) {
                                                                                                peg$currPos += 18;
                                                                                              } else {
                                                                                                s0 =
                                                                                                  peg$FAILED;
                                                                                                if (
                                                                                                  peg$silentFails ===
                                                                                                  0
                                                                                                ) {
                                                                                                  peg$fail(
                                                                                                    peg$e45
                                                                                                  );
                                                                                                }
                                                                                              }
                                                                                              if (
                                                                                                s0 ===
                                                                                                peg$FAILED
                                                                                              ) {
                                                                                                s0 =
                                                                                                  input.substr(
                                                                                                    peg$currPos,
                                                                                                    4
                                                                                                  );
                                                                                                if (
                                                                                                  s0.toLowerCase() ===
                                                                                                  peg$c46
                                                                                                ) {
                                                                                                  peg$currPos += 4;
                                                                                                } else {
                                                                                                  s0 =
                                                                                                    peg$FAILED;
                                                                                                  if (
                                                                                                    peg$silentFails ===
                                                                                                    0
                                                                                                  ) {
                                                                                                    peg$fail(
                                                                                                      peg$e46
                                                                                                    );
                                                                                                  }
                                                                                                }
                                                                                                if (
                                                                                                  s0 ===
                                                                                                  peg$FAILED
                                                                                                ) {
                                                                                                  s0 =
                                                                                                    input.substr(
                                                                                                      peg$currPos,
                                                                                                      10
                                                                                                    );
                                                                                                  if (
                                                                                                    s0.toLowerCase() ===
                                                                                                    peg$c47
                                                                                                  ) {
                                                                                                    peg$currPos += 10;
                                                                                                  } else {
                                                                                                    s0 =
                                                                                                      peg$FAILED;
                                                                                                    if (
                                                                                                      peg$silentFails ===
                                                                                                      0
                                                                                                    ) {
                                                                                                      peg$fail(
                                                                                                        peg$e47
                                                                                                      );
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

    return s0;
  }

  function peg$parseTagType() {
    var s0;

    s0 = input.substr(peg$currPos, 7);
    if (s0.toLowerCase() === peg$c48) {
      peg$currPos += 7;
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) {
        peg$fail(peg$e48);
      }
    }
    if (s0 === peg$FAILED) {
      s0 = input.substr(peg$currPos, 7);
      if (s0.toLowerCase() === peg$c49) {
        peg$currPos += 7;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) {
          peg$fail(peg$e49);
        }
      }
      if (s0 === peg$FAILED) {
        s0 = input.substr(peg$currPos, 4);
        if (s0.toLowerCase() === peg$c2) {
          peg$currPos += 4;
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) {
            peg$fail(peg$e2);
          }
        }
        if (s0 === peg$FAILED) {
          s0 = input.substr(peg$currPos, 4);
          if (s0.toLowerCase() === peg$c50) {
            peg$currPos += 4;
          } else {
            s0 = peg$FAILED;
            if (peg$silentFails === 0) {
              peg$fail(peg$e50);
            }
          }
          if (s0 === peg$FAILED) {
            s0 = input.substr(peg$currPos, 6);
            if (s0.toLowerCase() === peg$c51) {
              peg$currPos += 6;
            } else {
              s0 = peg$FAILED;
              if (peg$silentFails === 0) {
                peg$fail(peg$e51);
              }
            }
            if (s0 === peg$FAILED) {
              s0 = input.substr(peg$currPos, 8);
              if (s0.toLowerCase() === peg$c52) {
                peg$currPos += 8;
              } else {
                s0 = peg$FAILED;
                if (peg$silentFails === 0) {
                  peg$fail(peg$e52);
                }
              }
              if (s0 === peg$FAILED) {
                s0 = input.substr(peg$currPos, 6);
                if (s0.toLowerCase() === peg$c53) {
                  peg$currPos += 6;
                } else {
                  s0 = peg$FAILED;
                  if (peg$silentFails === 0) {
                    peg$fail(peg$e53);
                  }
                }
                if (s0 === peg$FAILED) {
                  s0 = input.substr(peg$currPos, 4);
                  if (s0.toLowerCase() === peg$c54) {
                    peg$currPos += 4;
                  } else {
                    s0 = peg$FAILED;
                    if (peg$silentFails === 0) {
                      peg$fail(peg$e54);
                    }
                  }
                  if (s0 === peg$FAILED) {
                    s0 = input.substr(peg$currPos, 6);
                    if (s0.toLowerCase() === peg$c19) {
                      peg$currPos += 6;
                    } else {
                      s0 = peg$FAILED;
                      if (peg$silentFails === 0) {
                        peg$fail(peg$e19);
                      }
                    }
                    if (s0 === peg$FAILED) {
                      s0 = input.substr(peg$currPos, 6);
                      if (s0.toLowerCase() === peg$c55) {
                        peg$currPos += 6;
                      } else {
                        s0 = peg$FAILED;
                        if (peg$silentFails === 0) {
                          peg$fail(peg$e55);
                        }
                      }
                      if (s0 === peg$FAILED) {
                        s0 = input.substr(peg$currPos, 5);
                        if (s0.toLowerCase() === peg$c23) {
                          peg$currPos += 5;
                        } else {
                          s0 = peg$FAILED;
                          if (peg$silentFails === 0) {
                            peg$fail(peg$e23);
                          }
                        }
                        if (s0 === peg$FAILED) {
                          s0 = input.substr(peg$currPos, 4);
                          if (s0.toLowerCase() === peg$c56) {
                            peg$currPos += 4;
                          } else {
                            s0 = peg$FAILED;
                            if (peg$silentFails === 0) {
                              peg$fail(peg$e56);
                            }
                          }
                          if (s0 === peg$FAILED) {
                            s0 = input.substr(peg$currPos, 3);
                            if (s0.toLowerCase() === peg$c30) {
                              peg$currPos += 3;
                            } else {
                              s0 = peg$FAILED;
                              if (peg$silentFails === 0) {
                                peg$fail(peg$e30);
                              }
                            }
                            if (s0 === peg$FAILED) {
                              s0 = input.substr(peg$currPos, 4);
                              if (s0.toLowerCase() === peg$c57) {
                                peg$currPos += 4;
                              } else {
                                s0 = peg$FAILED;
                                if (peg$silentFails === 0) {
                                  peg$fail(peg$e57);
                                }
                              }
                              if (s0 === peg$FAILED) {
                                s0 = input.substr(peg$currPos, 8);
                                if (s0.toLowerCase() === peg$c58) {
                                  peg$currPos += 8;
                                } else {
                                  s0 = peg$FAILED;
                                  if (peg$silentFails === 0) {
                                    peg$fail(peg$e58);
                                  }
                                }
                                if (s0 === peg$FAILED) {
                                  s0 = input.substr(peg$currPos, 6);
                                  if (s0.toLowerCase() === peg$c36) {
                                    peg$currPos += 6;
                                  } else {
                                    s0 = peg$FAILED;
                                    if (peg$silentFails === 0) {
                                      peg$fail(peg$e36);
                                    }
                                  }
                                  if (s0 === peg$FAILED) {
                                    s0 = input.substr(peg$currPos, 6);
                                    if (s0.toLowerCase() === peg$c59) {
                                      peg$currPos += 6;
                                    } else {
                                      s0 = peg$FAILED;
                                      if (peg$silentFails === 0) {
                                        peg$fail(peg$e59);
                                      }
                                    }
                                    if (s0 === peg$FAILED) {
                                      s0 = input.substr(peg$currPos, 8);
                                      if (s0.toLowerCase() === peg$c60) {
                                        peg$currPos += 8;
                                      } else {
                                        s0 = peg$FAILED;
                                        if (peg$silentFails === 0) {
                                          peg$fail(peg$e60);
                                        }
                                      }
                                      if (s0 === peg$FAILED) {
                                        s0 = input.substr(peg$currPos, 3);
                                        if (s0.toLowerCase() === peg$c61) {
                                          peg$currPos += 3;
                                        } else {
                                          s0 = peg$FAILED;
                                          if (peg$silentFails === 0) {
                                            peg$fail(peg$e61);
                                          }
                                        }
                                        if (s0 === peg$FAILED) {
                                          s0 = input.substr(peg$currPos, 6);
                                          if (s0.toLowerCase() === peg$c43) {
                                            peg$currPos += 6;
                                          } else {
                                            s0 = peg$FAILED;
                                            if (peg$silentFails === 0) {
                                              peg$fail(peg$e43);
                                            }
                                          }
                                          if (s0 === peg$FAILED) {
                                            s0 = input.substr(peg$currPos, 4);
                                            if (s0.toLowerCase() === peg$c46) {
                                              peg$currPos += 4;
                                            } else {
                                              s0 = peg$FAILED;
                                              if (peg$silentFails === 0) {
                                                peg$fail(peg$e46);
                                              }
                                            }
                                            if (s0 === peg$FAILED) {
                                              s0 = input.substr(peg$currPos, 4);
                                              if (
                                                s0.toLowerCase() === peg$c62
                                              ) {
                                                peg$currPos += 4;
                                              } else {
                                                s0 = peg$FAILED;
                                                if (peg$silentFails === 0) {
                                                  peg$fail(peg$e62);
                                                }
                                              }
                                              if (s0 === peg$FAILED) {
                                                s0 = input.substr(
                                                  peg$currPos,
                                                  4
                                                );
                                                if (
                                                  s0.toLowerCase() === peg$c63
                                                ) {
                                                  peg$currPos += 4;
                                                } else {
                                                  s0 = peg$FAILED;
                                                  if (peg$silentFails === 0) {
                                                    peg$fail(peg$e63);
                                                  }
                                                }
                                                if (s0 === peg$FAILED) {
                                                  s0 = input.substr(
                                                    peg$currPos,
                                                    3
                                                  );
                                                  if (
                                                    s0.toLowerCase() === peg$c64
                                                  ) {
                                                    peg$currPos += 3;
                                                  } else {
                                                    s0 = peg$FAILED;
                                                    if (peg$silentFails === 0) {
                                                      peg$fail(peg$e64);
                                                    }
                                                  }
                                                  if (s0 === peg$FAILED) {
                                                    s0 = input.substr(
                                                      peg$currPos,
                                                      10
                                                    );
                                                    if (
                                                      s0.toLowerCase() ===
                                                      peg$c65
                                                    ) {
                                                      peg$currPos += 10;
                                                    } else {
                                                      s0 = peg$FAILED;
                                                      if (
                                                        peg$silentFails === 0
                                                      ) {
                                                        peg$fail(peg$e65);
                                                      }
                                                    }
                                                    if (s0 === peg$FAILED) {
                                                      s0 = input.substr(
                                                        peg$currPos,
                                                        7
                                                      );
                                                      if (
                                                        s0.toLowerCase() ===
                                                        peg$c66
                                                      ) {
                                                        peg$currPos += 7;
                                                      } else {
                                                        s0 = peg$FAILED;
                                                        if (
                                                          peg$silentFails === 0
                                                        ) {
                                                          peg$fail(peg$e66);
                                                        }
                                                      }
                                                      if (s0 === peg$FAILED) {
                                                        s0 = input.substr(
                                                          peg$currPos,
                                                          6
                                                        );
                                                        if (
                                                          s0.toLowerCase() ===
                                                          peg$c67
                                                        ) {
                                                          peg$currPos += 6;
                                                        } else {
                                                          s0 = peg$FAILED;
                                                          if (
                                                            peg$silentFails ===
                                                            0
                                                          ) {
                                                            peg$fail(peg$e67);
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

    return s0;
  }

  function peg$parseStatType() {
    var s0;

    s0 = input.substr(peg$currPos, 4);
    if (s0.toLowerCase() === peg$c0) {
      peg$currPos += 4;
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) {
        peg$fail(peg$e68);
      }
    }
    if (s0 === peg$FAILED) {
      s0 = input.substr(peg$currPos, 8);
      if (s0.toLowerCase() === peg$c68) {
        peg$currPos += 8;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) {
          peg$fail(peg$e69);
        }
      }
    }

    return s0;
  }

  function peg$parseStatTooltip() {
    var s0, s1, s2, s3, s4, s5, s6;

    s0 = peg$currPos;
    s1 = peg$parseStatType();
    if (s1 !== peg$FAILED) {
      s2 = peg$parse_();
      s3 = peg$parseNumbers();
      if (s3 !== peg$FAILED) {
        s4 = peg$currPos;
        s5 = [];
        if (input.length > peg$currPos) {
          s6 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s6 = peg$FAILED;
          if (peg$silentFails === 0) {
            peg$fail(peg$e70);
          }
        }
        while (s6 !== peg$FAILED) {
          s5.push(s6);
          if (input.length > peg$currPos) {
            s6 = input.charAt(peg$currPos);
            peg$currPos++;
          } else {
            s6 = peg$FAILED;
            if (peg$silentFails === 0) {
              peg$fail(peg$e70);
            }
          }
        }
        s4 = input.substring(s4, peg$currPos);
        peg$savedPos = s0;
        s0 = peg$f0(s1, s3, s4);
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }

    return s0;
  }

  function peg$parseActionType() {
    var s0;

    s0 = input.substr(peg$currPos, 4);
    if (s0.toLowerCase() === peg$c2) {
      peg$currPos += 4;
    } else {
      s0 = peg$FAILED;
      if (peg$silentFails === 0) {
        peg$fail(peg$e71);
      }
    }
    if (s0 === peg$FAILED) {
      s0 = input.substr(peg$currPos, 4);
      if (s0.toLowerCase() === peg$c69) {
        peg$currPos += 4;
      } else {
        s0 = peg$FAILED;
        if (peg$silentFails === 0) {
          peg$fail(peg$e72);
        }
      }
      if (s0 === peg$FAILED) {
        s0 = input.substr(peg$currPos, 4);
        if (s0.toLowerCase() === peg$c56) {
          peg$currPos += 4;
        } else {
          s0 = peg$FAILED;
          if (peg$silentFails === 0) {
            peg$fail(peg$e73);
          }
        }
        if (s0 === peg$FAILED) {
          s0 = input.substr(peg$currPos, 6);
          if (s0.toLowerCase() === peg$c36) {
            peg$currPos += 6;
          } else {
            s0 = peg$FAILED;
            if (peg$silentFails === 0) {
              peg$fail(peg$e74);
            }
          }
          if (s0 === peg$FAILED) {
            s0 = input.substr(peg$currPos, 6);
            if (s0.toLowerCase() === peg$c43) {
              peg$currPos += 6;
            } else {
              s0 = peg$FAILED;
              if (peg$silentFails === 0) {
                peg$fail(peg$e75);
              }
            }
          }
        }
      }
    }

    return s0;
  }

  function peg$parseNormalActionTooltip() {
    var s0, s1, s2, s3, s4, s5, s6;

    s0 = peg$currPos;
    s1 = peg$parseActionType();
    if (s1 !== peg$FAILED) {
      s2 = peg$parse_();
      s3 = peg$parseNumbers();
      if (s3 !== peg$FAILED) {
        s4 = peg$currPos;
        s5 = [];
        if (input.length > peg$currPos) {
          s6 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s6 = peg$FAILED;
          if (peg$silentFails === 0) {
            peg$fail(peg$e70);
          }
        }
        while (s6 !== peg$FAILED) {
          s5.push(s6);
          if (input.length > peg$currPos) {
            s6 = input.charAt(peg$currPos);
            peg$currPos++;
          } else {
            s6 = peg$FAILED;
            if (peg$silentFails === 0) {
              peg$fail(peg$e70);
            }
          }
        }
        s4 = input.substring(s4, peg$currPos);
        peg$savedPos = s0;
        s0 = peg$f1(s1, s3, s4);
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }

    return s0;
  }

  function peg$parseTooltipAction() {
    var s0, s1, s2, s3;

    s0 = peg$currPos;
    s1 = peg$parseActionType();
    if (s1 !== peg$FAILED) {
      s2 = peg$parse_();
      s3 = peg$parseNumbers();
      if (s3 !== peg$FAILED) {
        peg$savedPos = s0;
        s0 = peg$f2(s1, s3);
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }
    if (s0 === peg$FAILED) {
      s0 = peg$currPos;
      s1 = peg$parseStatType();
      if (s1 !== peg$FAILED) {
        s2 = peg$parse_();
        s3 = peg$parseNumbers();
        if (s3 !== peg$FAILED) {
          peg$savedPos = s0;
          s0 = peg$f3(s1, s3);
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    }

    return s0;
  }

  function peg$parseNumbers() {
    var s0, s1, s2, s3, s4, s5, s6, s7, s8;

    s0 = peg$currPos;
    if (input.charCodeAt(peg$currPos) === 40) {
      s1 = peg$c70;
      peg$currPos++;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) {
        peg$fail(peg$e76);
      }
    }
    if (s1 !== peg$FAILED) {
      s2 = peg$currPos;
      s3 = [];
      s4 = input.charAt(peg$currPos);
      if (peg$r0.test(s4)) {
        peg$currPos++;
      } else {
        s4 = peg$FAILED;
        if (peg$silentFails === 0) {
          peg$fail(peg$e77);
        }
      }
      if (s4 !== peg$FAILED) {
        while (s4 !== peg$FAILED) {
          s3.push(s4);
          s4 = input.charAt(peg$currPos);
          if (peg$r0.test(s4)) {
            peg$currPos++;
          } else {
            s4 = peg$FAILED;
            if (peg$silentFails === 0) {
              peg$fail(peg$e77);
            }
          }
        }
      } else {
        s3 = peg$FAILED;
      }
      if (s3 !== peg$FAILED) {
        s2 = input.substring(s2, peg$currPos);
      } else {
        s2 = s3;
      }
      if (s2 !== peg$FAILED) {
        if (input.charCodeAt(peg$currPos) === 41) {
          s3 = peg$c71;
          peg$currPos++;
        } else {
          s3 = peg$FAILED;
          if (peg$silentFails === 0) {
            peg$fail(peg$e78);
          }
        }
        if (s3 !== peg$FAILED) {
          peg$savedPos = s0;
          s0 = peg$f4(s2);
        } else {
          peg$currPos = s0;
          s0 = peg$FAILED;
        }
      } else {
        peg$currPos = s0;
        s0 = peg$FAILED;
      }
    } else {
      peg$currPos = s0;
      s0 = peg$FAILED;
    }
    if (s0 === peg$FAILED) {
      s0 = peg$currPos;
      s1 = peg$currPos;
      s2 = peg$currPos;
      s3 = input.charAt(peg$currPos);
      if (peg$r1.test(s3)) {
        peg$currPos++;
      } else {
        s3 = peg$FAILED;
        if (peg$silentFails === 0) {
          peg$fail(peg$e79);
        }
      }
      if (s3 === peg$FAILED) {
        s3 = null;
      }
      s4 = [];
      s5 = input.charAt(peg$currPos);
      if (peg$r2.test(s5)) {
        peg$currPos++;
      } else {
        s5 = peg$FAILED;
        if (peg$silentFails === 0) {
          peg$fail(peg$e80);
        }
      }
      if (s5 !== peg$FAILED) {
        while (s5 !== peg$FAILED) {
          s4.push(s5);
          s5 = input.charAt(peg$currPos);
          if (peg$r2.test(s5)) {
            peg$currPos++;
          } else {
            s5 = peg$FAILED;
            if (peg$silentFails === 0) {
              peg$fail(peg$e80);
            }
          }
        }
      } else {
        s4 = peg$FAILED;
      }
      if (s4 !== peg$FAILED) {
        s5 = peg$currPos;
        if (input.length > peg$currPos) {
          s6 = input.charAt(peg$currPos);
          peg$currPos++;
        } else {
          s6 = peg$FAILED;
          if (peg$silentFails === 0) {
            peg$fail(peg$e70);
          }
        }
        if (s6 !== peg$FAILED) {
          s7 = [];
          s8 = input.charAt(peg$currPos);
          if (peg$r2.test(s8)) {
            peg$currPos++;
          } else {
            s8 = peg$FAILED;
            if (peg$silentFails === 0) {
              peg$fail(peg$e80);
            }
          }
          if (s8 !== peg$FAILED) {
            while (s8 !== peg$FAILED) {
              s7.push(s8);
              s8 = input.charAt(peg$currPos);
              if (peg$r2.test(s8)) {
                peg$currPos++;
              } else {
                s8 = peg$FAILED;
                if (peg$silentFails === 0) {
                  peg$fail(peg$e80);
                }
              }
            }
          } else {
            s7 = peg$FAILED;
          }
          if (s7 !== peg$FAILED) {
            s6 = [s6, s7];
            s5 = s6;
          } else {
            peg$currPos = s5;
            s5 = peg$FAILED;
          }
        } else {
          peg$currPos = s5;
          s5 = peg$FAILED;
        }
        if (s5 === peg$FAILED) {
          s5 = null;
        }
        s6 = input.charAt(peg$currPos);
        if (peg$r3.test(s6)) {
          peg$currPos++;
        } else {
          s6 = peg$FAILED;
          if (peg$silentFails === 0) {
            peg$fail(peg$e81);
          }
        }
        if (s6 === peg$FAILED) {
          s6 = null;
        }
        s3 = [s3, s4, s5, s6];
        s2 = s3;
      } else {
        peg$currPos = s2;
        s2 = peg$FAILED;
      }
      if (s2 !== peg$FAILED) {
        s1 = input.substring(s1, peg$currPos);
      } else {
        s1 = s2;
      }
      if (s1 !== peg$FAILED) {
        peg$savedPos = s0;
        s1 = peg$f5(s1);
      }
      s0 = s1;
    }

    return s0;
  }

  function peg$parse_() {
    var s0, s1;

    peg$silentFails++;
    s0 = [];
    s1 = input.charAt(peg$currPos);
    if (peg$r4.test(s1)) {
      peg$currPos++;
    } else {
      s1 = peg$FAILED;
      if (peg$silentFails === 0) {
        peg$fail(peg$e83);
      }
    }
    while (s1 !== peg$FAILED) {
      s0.push(s1);
      s1 = input.charAt(peg$currPos);
      if (peg$r4.test(s1)) {
        peg$currPos++;
      } else {
        s1 = peg$FAILED;
        if (peg$silentFails === 0) {
          peg$fail(peg$e83);
        }
      }
    }
    peg$silentFails--;
    s1 = peg$FAILED;
    if (peg$silentFails === 0) {
      peg$fail(peg$e82);
    }

    return s0;
  }

  const ITEM = options.item;
  const abilityIndex = options.abilityIndex;
  const auraIndex = options.auraIndex;

  peg$result = peg$startRuleFunction();

  if (options.peg$library) {
    return /** @type {any} */ ({
      peg$result,
      peg$currPos,
      peg$FAILED,
      peg$maxFailExpected,
      peg$maxFailPos
    });
  }
  if (peg$result !== peg$FAILED && peg$currPos === input.length) {
    return peg$result;
  } else {
    if (peg$result !== peg$FAILED && peg$currPos < input.length) {
      peg$fail(peg$endExpectation());
    }

    throw peg$buildStructuredError(
      peg$maxFailExpected,
      peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,
      peg$maxFailPos < input.length
        ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)
        : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)
    );
  }
}

const peg$allowedStartRules = ["Tooltip"];

export {
  peg$allowedStartRules as StartRules,
  peg$SyntaxError as SyntaxError,
  peg$parse as parse
};
